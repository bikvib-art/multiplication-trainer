import streamlit as st
import random

st.set_page_config(
    page_title="–¢—Ä–µ–Ω–∞–∂–µ—Ä —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ –¥–µ–ª–µ–Ω–∏—è",
    page_icon="üßÆ",
    layout="centered"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'game_active' not in st.session_state:
    st.session_state.game_active = False
if 'current_problem' not in st.session_state:
    st.session_state.current_problem = None
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'problems_solved' not in st.session_state:
    st.session_state.problems_solved = 0
if 'user_answer' not in st.session_state:
    st.session_state.user_answer = ""
if 'message' not in st.session_state:
    st.session_state.message = ""
if 'show_success' not in st.session_state:
    st.session_state.show_success = False
if 'problem_key' not in st.session_state:
    st.session_state.problem_key = 0
if 'show_cat' not in st.session_state:
    st.session_state.show_cat = False

def generate_problem():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"""
    operations = ['—É–º–Ω–æ–∂–µ–Ω–∏–µ', '–¥–µ–ª–µ–Ω–∏–µ']
    operation = random.choice(operations)
    
    if operation == '—É–º–Ω–æ–∂–µ–Ω–∏–µ':
        first_number = random.randint(0, 10)
        second_number = random.randint(0, 10)
        correct_answer = first_number * second_number
        problem_text = f"{first_number} √ó {second_number} = ?"
        
    else:  # –¥–µ–ª–µ–Ω–∏–µ
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ
        second_number = random.randint(1, 10)
        result = random.randint(0, 10)
        first_number = second_number * result
        
        correct_answer = result
        problem_text = f"{first_number} : {second_number} = ?"
    
    st.session_state.current_problem = {
        'text': problem_text,
        'correct_answer': correct_answer,
        'operation': operation
    }
    st.session_state.user_answer = ""
    st.session_state.message = ""
    st.session_state.show_success = False
    st.session_state.problem_key += 1  # –ò–∑–º–µ–Ω—è–µ–º –∫–ª—é—á –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞

def check_answer():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_input = st.session_state.get(f"user_answer_{st.session_state.problem_key}", "").strip()
    
    if not user_input:
        st.session_state.message = "‚ö†Ô∏è –¢—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∞ :("
        return
    
    try:
        user_answer = int(user_input)
        correct_answer = st.session_state.current_problem['correct_answer']
        
        if user_answer == correct_answer:
            st.session_state.score += 1
            st.session_state.problems_solved += 1
            st.session_state.message = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü!"
            st.session_state.show_success = True
            
        else:
            st.session_state.message = "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –æ—à–∏–±–ª–∞—Å—å! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑"
            
    except ValueError:
        st.session_state.message = "‚ö†Ô∏è –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ"

def start_game():
    """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É"""
    st.session_state.game_active = True
    st.session_state.score = 0
    st.session_state.problems_solved = 0
    st.session_state.problem_key = 0
    st.session_state.show_cat = False
    generate_problem()

def end_game():
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É"""
    st.session_state.game_active = False
    st.session_state.current_problem = None
    st.session_state.message = ""
    st.session_state.show_success = False

def show_cat_page():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–æ—Ç–∏–∫–æ–º"""
    st.session_state.game_active = False
    st.session_state.show_cat = True

def return_to_start():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
    st.session_state.game_active = False
    st.session_state.show_cat = False

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–æ—Ç–∏–∫–æ–º
if st.session_state.show_cat:
    st.title("üê± –ú—è—É! –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º URL —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∫–æ—Ç–∞)
    st.image("https://cataas.com/cat/cute", caption="–í–æ—Ç —Ç–µ–±–µ –∫–æ—Ç–∏–∫ –∑–∞ —Å—Ç–∞—Ä–∞–Ω–∏—è! üòä", use_container_width=True)
    
    st.markdown("---")
    
    if st.button("‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç—Ä–µ–Ω–∞–∂–µ—Ä—É", use_container_width=True, type="primary"):
        return_to_start()
        st.rerun()
    
    st.stop()

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üßÆ –¢—Ä–µ–Ω–∞–∂–µ—Ä —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ –¥–µ–ª–µ–Ω–∏—è")

if not st.session_state.game_active and not st.session_state.show_cat:
    # –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
    st.markdown("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä –ø–æ —É–º–Ω–æ–∂–µ–Ω–∏—é –∏ –¥–µ–ª–µ–Ω–∏—é!")
    
    col1, col2 = st.columns([1, 1])
    with col1:
        if st.button("‚úÖ –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", use_container_width=True, type="primary"):
            start_game()
            st.rerun()
    with col2:
        if st.button("‚ùå –í—ã–π—Ç–∏", use_container_width=True, type="secondary"):
            show_cat_page()
            st.rerun()

else:
    # –ò–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    # –ü—Ä–æ—Å—Ç–æ–π —Å—á–µ—Ç—á–∏–∫ –≤–º–µ—Å—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    st.write(f"**–†–µ—à–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤: {st.session_state.problems_solved}/20**")
    
    st.markdown("---")
    
    # –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞
    if st.session_state.current_problem:
        st.markdown(f"## {st.session_state.current_problem['text']}")
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∫–ª—é—á–æ–º
        user_input = st.text_input(
            "–¢–≤–æ–π –æ—Ç–≤–µ—Ç:",
            value="",
            key=f"user_answer_{st.session_state.problem_key}",
            placeholder="–í–≤–µ–¥–∏ –æ—Ç–≤–µ—Ç...",
            label_visibility="collapsed"
        )
        
        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        if st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç", use_container_width=True, type="primary"):
            check_answer()
            st.rerun()
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        if st.session_state.message:
            if "‚úÖ" in st.session_state.message:
                st.success(st.session_state.message)
            elif "‚ùå" in st.session_state.message:
                st.error(st.session_state.message)
            else:
                st.warning(st.session_state.message)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ (–ø–æ—Å–ª–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞)
        if st.session_state.show_success:
            if st.button("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä", use_container_width=True, type="primary"):
                if st.session_state.problems_solved < 20:
                    generate_problem()
                    st.rerun()
                else:
                    # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É –ø–æ—Å–ª–µ 20 –ø—Ä–∏–º–µ—Ä–æ–≤
                    end_game()
                    st.rerun()
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    if st.session_state.problems_solved >= 20:
        st.balloons()
        st.success("üéâ –¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! 20 –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–µ—à–µ–Ω–æ!")
        
        col1, col2 = st.columns([1, 1])
        with col1:
            if st.button("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", use_container_width=True, type="primary"):
                start_game()
                st.rerun()
        with col2:
            if st.button("üê± –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ç–∏–∫–∞", use_container_width=True, type="secondary"):
                show_cat_page()
                st.rerun()

    st.markdown("---")
    if st.button("‚èπÔ∏è –ü—Ä–µ—Ä–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", type="secondary"):
        show_cat_page()
        st.rerun()

