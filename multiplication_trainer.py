import streamlit as st
import random
import time

st.set_page_config(
    page_title="–¢—Ä–µ–Ω–∞–∂–µ—Ä —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ –¥–µ–ª–µ–Ω–∏—è",
    page_icon="üßÆ",
    layout="centered"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'game_active' not in st.session_state:
    st.session_state.game_active = False
if 'current_problem' not in st.session_state:
    st.session_state.current_problem = None
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'problems_solved' not in st.session_state:
    st.session_state.problems_solved = 0
if 'user_answer' not in st.session_state:
    st.session_state.user_answer = ""
if 'message' not in st.session_state:
    st.session_state.message = ""
if 'show_success' not in st.session_state:
    st.session_state.show_success = False

def generate_problem():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"""
    operations = ['—É–º–Ω–æ–∂–µ–Ω–∏–µ', '–¥–µ–ª–µ–Ω–∏–µ']
    operation = random.choice(operations)
    
    if operation == '—É–º–Ω–æ–∂–µ–Ω–∏–µ':
        first_number = random.randint(0, 10)
        second_number = random.randint(0, 10)
        correct_answer = first_number * second_number
        problem_text = f"{first_number} √ó {second_number} = ?"
        
    else:  # –¥–µ–ª–µ–Ω–∏–µ
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ
        second_number = random.randint(1, 10)
        result = random.randint(0, 10)
        first_number = second_number * result
        
        correct_answer = result
        problem_text = f"{first_number} : {second_number} = ?"
    
    st.session_state.current_problem = {
        'text': problem_text,
        'correct_answer': correct_answer,
        'operation': operation
    }
    st.session_state.user_answer = ""
    st.session_state.message = ""
    st.session_state.show_success = False

def check_answer():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_input = st.session_state.user_answer.strip()
    
    if not user_input:
        st.session_state.message = "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç!"
        return
    
    try:
        user_answer = int(user_input)
        correct_answer = st.session_state.current_problem['correct_answer']
        
        if user_answer == correct_answer:
            st.session_state.score += 1
            st.session_state.problems_solved += 1
            st.session_state.message = "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü!"
            st.session_state.show_success = True
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–∏–º–µ—Ä—É —á–µ—Ä–µ–∑ 1.5 —Å–µ–∫—É–Ω–¥—ã
            if st.session_state.problems_solved < 20:
                time.sleep(1.5)
                generate_problem()
                st.rerun()
            else:
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É –ø–æ—Å–ª–µ 20 –ø—Ä–∏–º–µ—Ä–æ–≤
                time.sleep(1.5)
                end_game()
                st.rerun()
        else:
            st.session_state.message = "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –æ—à–∏–±—Å—è! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑"
            
    except ValueError:
        st.session_state.message = "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!"

def start_game():
    """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É"""
    st.session_state.game_active = True
    st.session_state.score = 0
    st.session_state.problems_solved = 0
    generate_problem()

def end_game():
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É"""
    st.session_state.game_active = False
    st.session_state.current_problem = None
    st.session_state.message = ""

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üßÆ –¢—Ä–µ–Ω–∞–∂–µ—Ä —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ –¥–µ–ª–µ–Ω–∏—è")

if not st.session_state.game_active:
    # –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω
    st.markdown("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä –ø–æ —É–º–Ω–æ–∂–µ–Ω–∏—é –∏ –¥–µ–ª–µ–Ω–∏—é!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∏–≥—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if st.session_state.problems_solved > 0:
        st.success(f"üéâ –¢—ã —Ä–µ—à–∏–ª {st.session_state.score} –∏–∑ {st.session_state.problems_solved} –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    
    col1, col2 = st.columns([1, 1])
    with col1:
        if st.button("‚úÖ –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", use_container_width=True, type="primary"):
            start_game()
            st.rerun()
    with col2:
        if st.button("‚ùå –í—ã–π—Ç–∏", use_container_width=True, type="secondary"):
            st.markdown("–¢—ã –º–æ–ª–æ–¥–µ—Ü! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ :)")
            st.stop()

else:
    # –ò–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    col1, col2, col3 = st.columns(3)
    with col1:
        st.metric("–†–µ—à–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤", f"{st.session_state.problems_solved}/20")
    with col2:
        st.metric("–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤", st.session_state.score)
    with col3:
        accuracy = (st.session_state.score / st.session_state.problems_solved * 100) if st.session_state.problems_solved > 0 else 0
        st.metric("–¢–æ—á–Ω–æ—Å—Ç—å", f"{accuracy:.0f}%")
    
    st.markdown("---")
    
    # –¢–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞
    if st.session_state.current_problem:
        st.markdown(f"## {st.session_state.current_problem['text']}")
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞
        user_input = st.text_input(
            "–¢–≤–æ–π –æ—Ç–≤–µ—Ç:",
            value=st.session_state.user_answer,
            key="user_answer",
            placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ...",
            label_visibility="collapsed"
        )
        
        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        if st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç", use_container_width=True, type="primary"):
            check_answer()
            st.rerun()
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        if st.session_state.message:
            if "‚úÖ" in st.session_state.message:
                st.success(st.session_state.message)
            elif "‚ùå" in st.session_state.message:
                st.error(st.session_state.message)
            else:
                st.warning(st.session_state.message)
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    if st.session_state.problems_solved >= 20:
        st.balloons()
        st.success("üéâ –¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è! 20 –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–µ—à–µ–Ω–æ!")
        
        col1, col2 = st.columns([1, 1])
        with col1:
            if st.button("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", use_container_width=True, type="primary"):
                start_game()
                st.rerun()
        with col2:
            if st.button("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å", use_container_width=True, type="secondary"):
                end_game()
                st.rerun()

    st.markdown("---")
    if st.button("‚èπÔ∏è –ü—Ä–µ—Ä–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", type="secondary"):
        end_game()
        st.rerun()
